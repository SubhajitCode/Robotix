(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["customListPlots`"];


Options[scrollableListPlot]={topResolution->500,resolution->800,topPlot->{},plot->{}};


scrollableListPlot[data_,OptionsPattern[]]:=
Module[{
len,
topPlotData, 
plotData,
low,
high,
topPlotLow,
topPlotHigh,
epilog={},
min,
max,
plotLow,
plotHigh,
dataSpec
},
If[
ArrayDepth[data]==1,
(len =Dimensions[data][[1]]);dataSpec=Sequence[],(len =Dimensions[data][[2]]);dataSpec=All
];

topPlotData =
 data[[dataSpec,;;;;Floor[len/OptionValue[topResolution]]]];
low = 1;
high = Min[OptionValue[resolution],len];
topPlotLow=0;
topPlotHigh=len-1;
min = Min[data];
max= Max[data];

plotLow=low-1;
plotHigh=high-1;
plotData =
data[[dataSpec,low;;high]];

Column[{
EventHandler[

ListPlot[topPlotData,
Epilog->Dynamic[epilog],
DataRange->{topPlotLow,topPlotHigh},
OptionValue[topPlot]],

With[{action:=
Block[{pos,click},
pos=MousePosition["Graphics"];
click = Floor[(pos[[1]]-topPlotLow)*len/(topPlotHigh-topPlotLow)];
low = Max[1,Floor[click - OptionValue[resolution]/2]];
high = Min[len,low +OptionValue[resolution]-1];
low=Max[1,Min[low,high-OptionValue[resolution]+1]];

epilog={Opacity[0.3],Blue,
Block[{x,y},x=(low-1)*(topPlotHigh-topPlotLow)/(len-1) +topPlotLow;y=(high-1)*(topPlotHigh-topPlotLow)/(len-1)+topPlotLow;Polygon[{{x,min},{x,max},{y,max},{y,min}}]]};
plotLow=low-1;
plotHigh=high-1;
plotData=data[[dataSpec,low;;high]]
]},
{
"MouseClicked":>action,
"MouseDragged":>action
}
]

],
Dynamic[rangePane[
ListPlot[plotData,DataRange->{plotLow,plotHigh},OptionValue[plot]],
{{plotLow,plotHigh},{Min[plotData],Max[plotData]}}
]
]
}]
]



Options[rangePane]={maxPoints->3};


rangePane[graphics_Graphics,range_,OptionsPattern[]]:=
DynamicModule[{pts={}},
With[{
maxpts=OptionValue[maxPoints],
mousex:=Floor[MousePosition["Graphics"][[1]]],
mousexclosest:=Ordering[Abs[pts-Floor[MousePosition["Graphics"][[1]]]],1][[1]],
rangeMin=range[[1,1]],
rangeMax=range[[1,2]],
plotMin=range[[2,1]],
plotMax=range[[2,2]]
},

EventHandler[
Show[graphics,
Epilog->Dynamic[{
Line[{{#,plotMin},{#,plotMax}}]&/@pts,
If[Length[pts]>=2,MapThread[Text[#1,{#2,plotMin+(plotMax-plotMin)*0.9},{0,0}]&,{Differences[#],MovingAverage[#,2]}&[Sort[pts]]
],
{}
]
}]
],
{"MouseDown":>(
If[CurrentValue["ControlKey"],
If[Length[pts]>0,
pts=Drop[pts,{mousexclosest}]
],
If[CurrentValue["AltKey"],
If[Length[pts]>1,
Block[{c=mousexclosest},({pts[[-1]],pts[[c]]}={pts[[c]],pts[[-1]]})
]
],
If[Length[pts]<maxpts,
AppendTo[pts,mousex],
Block[{c=mousexclosest},({pts[[-1]],pts[[c]]}={pts[[c]],pts[[-1]]})
]
]
]
]
),
"MouseDragged":>(
If[!CurrentValue["ControlKey"],
If[Length[pts]>0,
pts[[-1]]=mousex
]
]
)
}
]
]]


EndPackage[]



